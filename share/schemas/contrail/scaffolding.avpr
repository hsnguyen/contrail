{
  "namespace": "contrail.scaffolding",
  "protocol": "ContrailProtocol",
  "doc": "Data structures for scaffolding",

  "types": [
     {"name": "BowtieMapping",
        "type": "record",
        "doc": ["Structure representing the output of bowtie. Each record ",
                "describes how a read aligns to a contig."],
        "fields":[
            {"name": "contig_id", "type":"string", "doc":"ID for the contig."},
            {"name": "read_id", "type":"string", "doc":"ID for the read."},
            {"name": "contig_start", "type":"int",
             "doc": ["The start position on the contig. if start > then end ",
                     "then read is aligned to the reverse complement. i.e ",
                     "read ~ = RC(contig[start:end]. 0 based indexes."]},
            {"name": "contig_end", "type": "int",
             "doc": ["The end position on the contig. The end is ",
                     "inclusive. Specifing the subrange as inclusive of both ",
                     "ends makes it easier to swap the indexes to indicate ",
                     "the read aligns to the reverse complement."]},
            {"name": "read_clear_start", "type": "int",
             "doc": ["The start of the clear range on the read. This is ",
                     "relative to the strand reported in the read file. ",
                     "This is 0 based"]},
            {"name": "read_clear_end", "type": "int",
             "doc": ["The end of the clear range on the read; this position ",
                     "is included in the match"]},
            {"name": "num_mismatches", "type":"int",
             "doc": ["Number of mismatches between the read and reference. ",
                     "This is primarily useful for verification if read is ",
                     "included"]},
            {"name": "read", "type": ["null", "string"],
             "doc" : ["For debugging and validation, we can include the ",
                      "actual read this allows us to verify that the ",
                      "alignment is specified correctly."]}
         ]
    },
    {"name": "MatePairMappings",
        "type": "record",
        "doc": ["Structure the mappings for a pair of reads."],
        "fields":[
            {"name": "mate_id", "type":"string", "doc":"ID for the mate pair."},
            {"name": "library_id", "type":"string",
             "doc":"The id for the library."},
            {"name": "left_mappings",
             "type": {"type":"array", "items": "BowtieMapping"},
             "doc": "The mappings associated with one read in the mate pair."},
            {"name": "right_mappings",
             "type": {"type":"array", "items": "BowtieMapping"},
             "doc": ["The mappings associated with the other read in the mate ",
                     "pair."]}
         ]
    },
    {"name": "ContigLink",
        "type": "record",
        "doc": ["Represent a link between contigs."],
        "fields":[
            {"name": "contig_id", "type":"string",
             "doc":"ID for the other contig."},
            {"name": "num_mate_pairs", "type":"int",
             "doc":"The number of mate pairs connecting these nodes."}
         ]
    },
    {"name": "Library",
        "type": "record",
        "doc": ["Describes a read library."],
        "fields":[
            {"name": "name", "type":"string", "doc":"Name of the library."},
            {"name": "min_size", "type":"int",
             "doc": "The minimum size for reads."},
            {"name": "max_size", "type":"int",
             "doc": "The maximum size for reads."},
            {"name": "files", "type": {"type": "array", "items": "string"},
             "doc": "A list of the files in the library."}
         ]
    }
  ]
}
