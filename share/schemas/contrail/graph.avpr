{
  "namespace": "contrail.graph",
  "protocol": "ContrailProtocol",
  "doc": "Data structures for the graph.",
    {"name": "GraphNodeKMerTag",
     "type": "record",
     "doc": "Represent a tag assigned to nodes in the graph.",
     "fields": [
            {"name": "read_tag", "type":"string",
             "doc": "Tag for the read we came from."
            },
            {"name": "chunk", "type":"int",
             "doc": "Identifies the position within the read where it came from."
            }
        ]
    },
    {"name": "DestForLinkDir",
     "type": "record",
     "doc": "Represent the data for a particular instance of an edge.",
     "fields": [ {"name": "link_dir",
                "type": "string",
                "doc": "Two letter string representing the direction for the edge."
               },
               {"name": "read_tags",
                "type": {"type": "array", "items": "string"},
                "doc": "Array of strings representing the reads this edge came from"
               }
             ]
    },
    {"name": "EdgeDestNode",
     "type": "record",
     "doc": "Represent the destinations for an edge",
     "fields": [
     			 // TODO(jlewi): Do we actually need to store the canonical sequence?
     			 // Is it sufficient to store an id for the destination node
                 {"name": "canonical_sequence",
                  "type": "CompressedSequence",
                  "doc": "The canonical sequence for the destination node."
                 },
                 {"name": "node_id",
                  "type": "string",
                  "doc": "The id for the destination node."
                 },
                 {"name": "link_dirs", 
                  "type": {"type": "array", "items": "DestForLinkDir"},
                  "doc": "Describes the instances for this canonical sequence."
                 }
               ]
    },    
    {"name": "GraphNodeData",
     "type": "record",
     "doc": "Represent a node in the DeBruijn Graph.",
     "fields": [
     		     // TODO(jlewi): This field contains information about which read the sequence 
     		     // came from. We might want to rename this field. 
                 {"name": "mertag", "type":"GraphNodeKMerTag",
                  "doc": "A tag for this node"
                 },
                 {"name": "node_id", 
                  "type": "string",
                  "doc": "An id for this node. This must be consistent with the id used in destination nodes."
                 },
                 {"name": "coverage", "type": "int",
                  "doc": "Coverage."
                 },
                 // TODO(jlewi): We should rename this canonical_source 
                 // because it won't always be length K.
                 {"name": "canonical_source_kmer", "type":"CompressedSequence", 
                  "doc": "Sequence of bytes representing the compressed, canonical sequence corresponding to the source."
                 },
                 {"name": "dest_nodes", 
                  "type": {"type": "array", "items":"EdgeDestNode"},
                  "doc": "A list of EdgeDestNodes representing the canonical destination nodes."
                 },
                 {"name": "r5_tags", 
                  "type": {"type": "array", "items": "R5Tag"}
                 }
               ]
    },    
	] // end types
}
